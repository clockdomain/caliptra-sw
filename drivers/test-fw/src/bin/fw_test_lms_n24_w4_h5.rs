/*++

Licensed under the Apache-2.0 license.

Abstract:

    File contains test cases for LMS signature verification. This file is machine generated.

--*/

#![no_std]
#![no_main]

use caliptra_drivers::{Lms, LmsResult, Sha256};
use caliptra_lms_types::{LmsPublicKey, LmsSignature};
use caliptra_registers::sha256::Sha256Reg;
use caliptra_test_harness::test_suite;

struct LmsTest<'a> {
    test_passed: bool,
    signature: &'a [u8],
}

fn test_lms_random_suite() {
    let mut sha256 = unsafe { Sha256::new(Sha256Reg::new()) };
    	const MESSAGE :[u8; 33] = [116, 104, 105, 115, 32, 105, 115, 32, 116, 104, 101, 32, 109, 101, 115, 115, 97, 103, 101, 32, 73, 32, 119, 97, 110, 116, 32, 115, 105, 103, 110, 101, 100];
	const PUBLIC_KEY_BYTES: [u8; 48] = [0, 0, 0, 10, 0, 0, 0, 7, 4, 25, 95, 154, 12, 39, 174, 14, 231, 197, 231, 56, 214, 103, 175, 5, 135, 27, 205, 221, 202, 215, 98, 35, 238, 74, 35, 25, 21, 134, 101, 88, 95, 219, 40, 123, 172, 176, 46, 242];
	let (head, thing1, _tail): (&[u8], &[LmsPublicKey<6>], &[u8]) = unsafe { PUBLIC_KEY_BYTES.align_to::<LmsPublicKey<6>>() };
    	assert!(head.is_empty());
    	let lms_public_key = thing1[0];
	const TESTS: [LmsTest; 2] = [
		LmsTest{ test_passed: true, signature: &[0, 0, 0, 30, 0, 0, 0, 7, 143, 56, 77, 125, 120, 203, 227, 109, 195, 249, 246, 34, 45, 213, 148, 98, 120, 39, 197, 125, 185, 48, 193, 193, 108, 138, 150, 22, 163, 189, 116, 63, 149, 117, 109, 92, 75, 223, 178, 130, 69, 185, 60, 74, 247, 91, 133, 8, 12, 3, 83, 14, 180, 255, 42, 99, 67, 131, 129, 2, 115, 237, 95, 118, 103, 252, 252, 186, 166, 0, 239, 106, 140, 81, 107, 50, 224, 30, 188, 63, 89, 72, 155, 153, 152, 49, 191, 61, 124, 208, 14, 89, 249, 17, 119, 219, 116, 145, 61, 116, 163, 31, 159, 218, 153, 3, 65, 88, 206, 95, 244, 78, 171, 102, 17, 37, 210, 98, 162, 169, 236, 149, 93, 200, 219, 123, 90, 91, 20, 156, 87, 134, 213, 213, 10, 39, 9, 11, 119, 162, 200, 92, 151, 207, 202, 240, 6, 80, 193, 173, 129, 139, 134, 241, 133, 228, 59, 93, 36, 190, 59, 174, 20, 180, 140, 155, 103, 245, 143, 87, 56, 145, 89, 213, 220, 173, 46, 213, 0, 132, 250, 222, 66, 106, 17, 144, 98, 31, 156, 128, 210, 201, 181, 182, 169, 138, 188, 10, 158, 191, 148, 171, 35, 23, 228, 33, 117, 175, 128, 146, 183, 106, 217, 105, 93, 167, 176, 40, 142, 197, 86, 5, 110, 74, 214, 212, 202, 198, 3, 10, 19, 234, 34, 110, 192, 104, 83, 236, 175, 207, 99, 42, 40, 1, 85, 139, 110, 147, 240, 33, 101, 23, 251, 134, 93, 199, 241, 22, 154, 13, 142, 133, 1, 29, 30, 73, 121, 58, 55, 97, 109, 55, 255, 102, 85, 101, 141, 5, 16, 58, 186, 192, 83, 104, 92, 93, 82, 113, 177, 217, 243, 180, 19, 219, 65, 243, 91, 248, 30, 33, 177, 196, 59, 69, 20, 172, 168, 204, 173, 121, 49, 248, 88, 89, 75, 52, 53, 255, 50, 0, 191, 196, 120, 168, 87, 190, 8, 76, 121, 197, 196, 243, 51, 250, 239, 179, 23, 136, 77, 94, 5, 140, 38, 0, 191, 127, 106, 142, 160, 175, 114, 42, 233, 115, 26, 119, 147, 191, 76, 51, 159, 198, 82, 63, 206, 254, 184, 195, 19, 10, 236, 127, 148, 240, 126, 60, 87, 214, 19, 105, 187, 38, 177, 43, 192, 248, 231, 222, 210, 96, 18, 75, 86, 150, 191, 136, 229, 124, 228, 146, 184, 14, 91, 13, 41, 84, 151, 28, 63, 143, 144, 240, 34, 189, 128, 206, 246, 61, 112, 167, 112, 177, 201, 243, 212, 29, 86, 82, 23, 222, 87, 118, 145, 92, 193, 124, 178, 245, 128, 10, 183, 21, 19, 29, 53, 74, 91, 31, 110, 208, 37, 168, 85, 206, 223, 140, 70, 126, 3, 254, 237, 184, 118, 147, 92, 236, 177, 196, 141, 53, 69, 2, 134, 10, 36, 77, 91, 84, 113, 186, 161, 227, 123, 190, 173, 6, 149, 127, 223, 255, 138, 253, 243, 48, 11, 252, 219, 189, 155, 73, 41, 209, 40, 4, 139, 122, 88, 52, 101, 150, 224, 50, 136, 188, 81, 36, 235, 126, 83, 234, 233, 75, 187, 199, 17, 82, 196, 238, 93, 55, 76, 169, 244, 161, 240, 49, 171, 243, 22, 82, 14, 252, 32, 15, 205, 254, 173, 170, 190, 123, 77, 221, 182, 79, 43, 241, 238, 0, 13, 202, 185, 102, 190, 108, 55, 109, 100, 14, 60, 42, 86, 130, 222, 241, 200, 129, 184, 223, 58, 165, 53, 193, 71, 191, 207, 44, 49, 208, 224, 33, 133, 45, 18, 41, 224, 36, 240, 115, 75, 197, 236, 127, 170, 225, 251, 239, 63, 185, 89, 148, 53, 18, 243, 148, 141, 169, 218, 71, 164, 222, 245, 151, 67, 241, 32, 210, 190, 109, 237, 242, 120, 167, 54, 188, 22, 1, 121, 179, 150, 202, 83, 244, 81, 44, 154, 19, 124, 136, 43, 125, 36, 219, 73, 13, 146, 112, 159, 178, 214, 154, 109, 62, 95, 109, 25, 117, 228, 139, 165, 167, 230, 33, 255, 105, 6, 4, 57, 177, 222, 49, 217, 11, 192, 239, 233, 137, 139, 101, 48, 88, 117, 121, 249, 214, 215, 44, 216, 86, 130, 47, 74, 6, 157, 64, 195, 254, 35, 0, 83, 56, 76, 24, 221, 127, 1, 58, 97, 161, 148, 18, 192, 218, 66, 184, 106, 196, 54, 154, 219, 104, 175, 107, 220, 16, 85, 138, 238, 2, 65, 53, 131, 194, 38, 153, 190, 229, 191, 143, 67, 84, 234, 244, 80, 255, 31, 39, 171, 155, 69, 124, 121, 93, 70, 54, 133, 173, 180, 72, 32, 80, 8, 226, 228, 194, 79, 88, 53, 185, 35, 242, 244, 148, 219, 47, 186, 181, 111, 68, 144, 109, 11, 204, 169, 142, 3, 173, 239, 101, 217, 102, 104, 248, 192, 191, 35, 54, 18, 26, 110, 104, 176, 40, 199, 157, 120, 53, 64, 204, 179, 57, 140, 66, 202, 70, 99, 90, 29, 47, 144, 42, 46, 249, 57, 111, 56, 145, 9, 27, 251, 80, 228, 25, 117, 123, 171, 54, 236, 173, 148, 130, 156, 207, 50, 135, 191, 210, 219, 208, 24, 26, 82, 233, 177, 14, 135, 24, 154, 31, 174, 252, 218, 253, 233, 142, 153, 167, 176, 20, 191, 61, 135, 178, 100, 130, 159, 49, 10, 107, 135, 144, 175, 58, 251, 197, 234, 235, 196, 23, 51, 55, 226, 97, 19, 215, 149, 109, 74, 83, 112, 43, 170, 217, 173, 12, 88, 5, 157, 127, 14, 38, 246, 254, 214, 77, 95, 164, 106, 40, 232, 20, 123, 46, 245, 52, 129, 122, 187, 8, 113, 21, 254, 118, 158, 96, 226, 153, 156, 216, 144, 242, 98, 88, 243, 1, 101, 231, 71, 7, 216, 240, 20, 134, 139, 79, 209, 87, 192, 33, 6, 250, 19, 108, 166, 33, 24, 22, 157, 120, 231, 72, 69, 58, 18, 224, 216, 26, 60, 219, 3, 183, 121, 14, 93, 159, 140, 212, 46, 167, 14, 81, 234, 61, 1, 113, 64, 157, 52, 112, 104, 191, 88, 58, 110, 24, 252, 14, 94, 239, 82, 143, 99, 125, 74, 38, 84, 168, 5, 178, 97, 145, 93, 11, 251, 51, 222, 133, 200, 47, 97, 126, 179, 45, 217, 147, 117, 187, 65, 198, 229, 85, 118, 104, 185, 208, 185, 97, 236, 163, 191, 130, 94, 18, 108, 251, 21, 141, 166, 66, 236, 119, 168, 67, 129, 245, 48, 217, 7, 176, 131, 22, 245, 117, 80, 138, 143, 55, 3, 212, 28, 84, 25, 21, 43, 85, 9, 163, 6, 196, 114, 131, 251, 226, 78, 42, 119, 251, 61, 32, 182, 33, 119, 196, 175, 51, 186, 6, 55, 158, 198, 141, 134, 173, 225, 199, 65, 109, 42, 140, 85, 233, 163, 54, 90, 151, 45, 139, 100, 72, 57, 136, 128, 231, 119, 78, 221, 112, 169, 103, 25, 121, 86, 201, 236, 111, 150, 234, 65, 206, 168, 252, 31, 69, 38, 163, 213, 158, 21, 65, 231, 202, 207, 15, 23, 51, 79, 113, 18, 161, 248, 64, 216, 149, 165, 191, 187, 38, 97, 50, 172, 0, 161, 38, 118, 72, 16, 192, 80, 49, 229, 179, 24, 61, 88, 123, 115, 212, 86, 216, 207, 132, 31, 232, 183, 186, 137, 56, 182, 251, 200, 247, 227, 247, 201, 143, 214, 224, 87, 14, 96, 10, 80, 132, 64, 215, 1, 220, 137, 9, 104, 140, 66, 72, 106, 76, 224, 210, 156, 231, 0, 0, 0, 10, 170, 164, 126, 202, 140, 19, 116, 154, 211, 234, 82, 119, 80, 248, 103, 8, 153, 151, 177, 40, 155, 205, 111, 162, 48, 141, 30, 47, 135, 12, 125, 66, 55, 67, 215, 213, 215, 198, 236, 246, 255, 225, 74, 110, 49, 220, 143, 58, 232, 95, 214, 227, 213, 250, 167, 243, 193, 113, 124, 170, 6, 76, 190, 254, 191, 234, 176, 129, 60, 224, 10, 172, 2, 23, 8, 102, 173, 116, 136, 200, 19, 85, 58, 23, 247, 50, 172, 114, 5, 134, 213, 185, 249, 65, 204, 30, 145, 126, 12, 227, 156, 149, 124, 234, 195, 85, 58, 27, 114, 146, 115, 12, 139, 202, 40, 207, 172, 180, 111, 111]},
		LmsTest{ test_passed: true, signature: &[0, 0, 0, 12, 0, 0, 0, 7, 4, 94, 45, 184, 197, 62, 192, 12, 27, 151, 172, 213, 17, 182, 131, 198, 222, 236, 23, 94, 28, 245, 20, 143, 5, 58, 193, 179, 118, 76, 88, 182, 46, 67, 12, 225, 95, 10, 119, 223, 56, 49, 76, 219, 10, 21, 8, 41, 68, 230, 178, 66, 112, 52, 128, 52, 159, 47, 19, 42, 247, 4, 183, 91, 196, 175, 108, 16, 158, 160, 5, 150, 138, 80, 74, 47, 143, 89, 220, 75, 230, 217, 180, 187, 166, 69, 132, 69, 197, 23, 37, 59, 149, 192, 200, 2, 7, 21, 66, 253, 175, 70, 132, 96, 184, 16, 156, 239, 78, 10, 86, 78, 252, 241, 80, 168, 254, 205, 229, 70, 211, 211, 217, 99, 241, 90, 46, 122, 172, 79, 170, 216, 64, 155, 13, 164, 97, 207, 167, 142, 87, 160, 189, 241, 167, 61, 122, 183, 249, 41, 50, 99, 55, 57, 125, 254, 78, 21, 217, 95, 75, 225, 68, 189, 254, 237, 121, 199, 106, 231, 152, 198, 184, 189, 209, 237, 60, 105, 191, 30, 25, 93, 234, 184, 33, 58, 232, 114, 155, 237, 18, 133, 56, 134, 131, 224, 31, 217, 231, 251, 120, 125, 119, 63, 149, 165, 96, 68, 23, 47, 59, 147, 137, 8, 219, 210, 89, 162, 217, 106, 89, 155, 109, 188, 127, 0, 171, 69, 1, 195, 54, 65, 215, 44, 112, 223, 184, 234, 23, 61, 56, 146, 233, 104, 152, 143, 228, 191, 111, 60, 122, 211, 89, 106, 237, 108, 174, 152, 31, 227, 240, 124, 112, 163, 219, 147, 214, 78, 7, 188, 244, 42, 244, 2, 223, 240, 5, 60, 20, 158, 253, 176, 162, 53, 36, 148, 254, 58, 12, 50, 86, 59, 130, 170, 161, 221, 59, 152, 134, 156, 238, 148, 151, 11, 121, 114, 124, 242, 88, 200, 13, 185, 155, 119, 185, 119, 120, 67, 243, 124, 179, 180, 71, 83, 118, 135, 157, 232, 197, 152, 205, 42, 85, 243, 87, 234, 186, 240, 251, 140, 25, 142, 93, 229, 136, 158, 168, 13, 89, 43, 122, 180, 219, 184, 144, 179, 62, 245, 20, 117, 92, 187, 240, 202, 91, 172, 17, 195, 152, 43, 201, 8, 103, 230, 252, 162, 109, 78, 218, 34, 67, 131, 253, 146, 41, 137, 183, 146, 242, 105, 235, 62, 235, 56, 224, 205, 103, 221, 17, 145, 194, 222, 233, 212, 30, 107, 254, 57, 245, 233, 61, 123, 219, 132, 137, 218, 122, 122, 192, 28, 21, 10, 40, 44, 5, 237, 163, 234, 249, 120, 215, 55, 15, 225, 245, 18, 217, 224, 185, 182, 128, 26, 100, 98, 25, 104, 122, 14, 202, 92, 116, 137, 2, 243, 111, 109, 209, 92, 95, 193, 164, 97, 183, 154, 116, 60, 8, 119, 5, 155, 251, 49, 171, 173, 59, 159, 43, 170, 146, 139, 232, 61, 52, 4, 64, 222, 31, 27, 67, 7, 5, 26, 0, 10, 22, 6, 184, 2, 22, 221, 12, 252, 37, 245, 7, 48, 161, 131, 49, 183, 135, 119, 61, 99, 40, 46, 190, 229, 24, 213, 217, 213, 45, 80, 166, 55, 158, 238, 235, 157, 70, 78, 189, 186, 219, 251, 207, 113, 118, 163, 194, 175, 106, 88, 67, 195, 84, 39, 107, 239, 31, 153, 127, 154, 154, 173, 138, 37, 16, 174, 154, 7, 224, 159, 239, 128, 216, 254, 209, 86, 216, 156, 61, 118, 55, 181, 6, 18, 252, 238, 245, 14, 132, 65, 47, 138, 160, 16, 222, 16, 214, 137, 115, 241, 174, 246, 28, 45, 233, 53, 47, 76, 201, 142, 77, 20, 149, 240, 95, 28, 94, 211, 81, 25, 147, 246, 95, 253, 207, 10, 197, 21, 182, 208, 207, 48, 128, 201, 182, 137, 18, 5, 91, 115, 16, 238, 163, 21, 239, 173, 29, 186, 198, 151, 248, 83, 179, 209, 46, 61, 171, 191, 165, 115, 107, 225, 82, 117, 168, 168, 185, 180, 47, 124, 85, 158, 109, 242, 186, 215, 235, 51, 107, 197, 226, 164, 62, 243, 238, 64, 150, 228, 159, 238, 11, 24, 171, 12, 173, 51, 166, 164, 78, 30, 189, 0, 81, 81, 205, 221, 60, 24, 116, 49, 109, 100, 241, 31, 137, 250, 253, 94, 87, 235, 0, 87, 38, 124, 119, 169, 69, 224, 198, 90, 73, 179, 173, 98, 69, 72, 88, 133, 91, 225, 120, 7, 203, 216, 164, 34, 105, 153, 223, 32, 131, 211, 67, 118, 8, 154, 67, 24, 101, 69, 236, 95, 178, 121, 106, 3, 224, 178, 246, 57, 154, 66, 191, 171, 37, 13, 183, 104, 79, 17, 93, 30, 104, 125, 129, 165, 154, 64, 107, 179, 145, 3, 184, 56, 175, 36, 24, 17, 173, 2, 34, 131, 13, 24, 2, 158, 104, 38, 195, 169, 129, 136, 220, 179, 230, 183, 141, 97, 65, 217, 246, 164, 241, 45, 6, 226, 90, 127, 146, 102, 64, 225, 247, 227, 242, 37, 139, 164, 164, 153, 137, 142, 155, 254, 74, 2, 244, 160, 31, 127, 66, 19, 70, 113, 188, 34, 155, 251, 159, 65, 122, 65, 141, 58, 253, 249, 199, 94, 93, 199, 186, 145, 160, 10, 112, 229, 243, 23, 79, 146, 33, 26, 0, 213, 251, 108, 215, 186, 151, 247, 147, 9, 59, 110, 90, 228, 48, 97, 74, 13, 82, 62, 62, 41, 196, 61, 90, 16, 159, 89, 88, 91, 176, 24, 54, 33, 65, 118, 57, 65, 171, 130, 198, 252, 120, 177, 47, 178, 66, 137, 213, 253, 40, 252, 74, 236, 24, 37, 77, 50, 247, 48, 252, 105, 108, 139, 253, 7, 1, 3, 175, 204, 156, 208, 32, 234, 149, 197, 178, 188, 181, 33, 46, 149, 105, 156, 163, 232, 249, 252, 115, 43, 245, 55, 234, 112, 185, 57, 69, 228, 244, 255, 198, 97, 150, 141, 188, 128, 131, 230, 175, 138, 102, 38, 113, 139, 193, 82, 249, 9, 32, 31, 116, 151, 110, 255, 79, 103, 98, 138, 69, 253, 251, 48, 144, 206, 53, 104, 190, 229, 95, 52, 122, 145, 68, 187, 173, 199, 247, 141, 88, 124, 188, 18, 111, 47, 201, 186, 15, 11, 187, 8, 105, 136, 25, 10, 188, 102, 106, 220, 73, 72, 27, 86, 42, 99, 85, 206, 247, 231, 215, 128, 166, 68, 133, 6, 0, 104, 112, 20, 38, 60, 112, 207, 29, 7, 50, 2, 92, 66, 103, 194, 244, 128, 122, 76, 196, 220, 93, 250, 2, 143, 64, 116, 248, 246, 51, 23, 21, 184, 135, 167, 240, 79, 156, 190, 222, 187, 22, 238, 42, 64, 72, 164, 74, 202, 167, 145, 195, 235, 230, 250, 132, 14, 136, 51, 143, 219, 98, 126, 234, 115, 67, 154, 216, 156, 189, 213, 211, 25, 70, 31, 109, 98, 13, 82, 88, 83, 85, 58, 15, 252, 45, 63, 83, 75, 4, 48, 225, 202, 67, 8, 216, 69, 68, 229, 239, 124, 211, 57, 82, 132, 123, 139, 136, 102, 9, 71, 128, 7, 53, 223, 26, 106, 168, 222, 30, 68, 132, 57, 50, 196, 3, 172, 99, 102, 132, 106, 57, 63, 196, 4, 198, 215, 244, 184, 228, 130, 39, 47, 29, 187, 189, 164, 197, 160, 100, 242, 8, 47, 238, 24, 71, 160, 86, 77, 238, 55, 100, 160, 3, 234, 180, 160, 135, 175, 105, 14, 23, 178, 166, 246, 115, 32, 125, 42, 237, 249, 88, 133, 197, 198, 30, 202, 0, 0, 0, 10, 92, 79, 42, 24, 66, 47, 194, 95, 68, 135, 180, 4, 140, 134, 187, 200, 180, 245, 84, 19, 238, 72, 126, 29, 226, 153, 138, 19, 94, 66, 70, 37, 108, 233, 75, 197, 70, 74, 49, 5, 31, 150, 125, 129, 10, 87, 237, 143, 145, 134, 132, 220, 25, 252, 17, 188, 193, 119, 206, 203, 93, 15, 93, 155, 135, 85, 149, 44, 96, 240, 14, 149, 165, 178, 170, 72, 52, 94, 196, 191, 33, 103, 9, 232, 240, 218, 250, 32, 153, 136, 32, 69, 98, 140, 100, 98, 0, 4, 83, 212, 94, 18, 75, 240, 161, 204, 214, 116, 63, 195, 115, 252, 233, 84, 176, 205, 145, 151, 132, 53]},
	];
	for t in TESTS {
        let (head, thing2, _tail): (&[u8], &[LmsSignature<6, 51, 5>], &[u8]) =
            unsafe { t.signature.align_to::<LmsSignature<6, 51, 5>>() };

        assert!(head.is_empty());
        let lms_sig = thing2[0];
        let verify_result = Lms::default().verify_lms_signature_generic(
            &mut sha256,
            &MESSAGE,
            &lms_public_key,
            &lms_sig,
        );
        if t.test_passed {
            // if the test is supposed to pass then we better have no errors and a successful verification
            let result = verify_result.unwrap();
            assert_eq!(result, LmsResult::Success)
        } else {
            // if the test is supposed to fail it could be for a number of reasons that could raise a variety of errors
            // if the verification didn't error, then extract the LMS result and ensure it is a failed verification
            if verify_result.is_ok() {
                let result = verify_result.unwrap();
                assert_eq!(result, LmsResult::SigVerifyFailed)
            }
        }
    }
}

test_suite! {
    test_lms_random_suite,
}
